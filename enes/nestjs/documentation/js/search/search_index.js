var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.127,1,1.906]],["body/controllers/AppController.html",[0,1.62,1,2.739,2,1.354,3,0.411,4,0.354,5,0.354,6,2.745,7,0.672,8,1.974,9,4.307,10,1.849,11,0.037,12,0.916,13,3.325,14,1.496,15,1.62,16,0.792,17,0.748,18,2.448,19,2.745,20,0.411,21,0.152,22,2.362,23,2.745,24,1.659,25,3.325,26,0.027,27,0.027]],["title/modules/AppModule.html",[28,1.243,29,1.906]],["body/modules/AppModule.html",[1,2.53,2,1.392,3,0.287,4,0.248,5,0.248,11,0.037,16,0.989,17,0.523,18,2.481,19,1.919,20,0.287,21,0.106,26,0.021,27,0.021,28,1.392,29,3.417,30,1.047,31,1.705,32,1.919,33,1.919,34,1.919,35,2.765,36,2.765,37,2.134,38,1.452,39,1.452,40,2.325,41,2.428,42,2.428,43,2.325,44,1.652,45,2.325,46,2.325,47,1.919,48,1.652,49,1.16,50,0.947,51,2.325,52,2.325,53,2.325,54,1.919,55,2.325,56,2.325,57,2.325,58,2.325,59,1.452,60,2.325,61,2.325,62,2.325,63,1.919]],["title/injectables/AppService.html",[18,1.523,64,0.928]],["body/injectables/AppService.html",[3,0.442,4,0.381,5,0.381,7,0.722,8,2.069,9,4.427,11,0.036,12,0.985,14,1.608,15,1.697,16,0.646,17,0.803,18,2.293,20,0.442,21,0.163,24,1.783,26,0.028,27,0.028,64,1.397,65,1.783,66,2.95,67,3.573,68,3.573,69,3.573]],["title/controllers/AuthController.html",[0,1.127,70,2.168]],["body/controllers/AuthController.html",[0,1.492,2,1.646,3,0.499,4,0.43,5,0.43,11,0.035,16,0.73,17,0.908,20,0.499,21,0.184,26,0.031,27,0.031,70,3.527,71,3.335,72,2.87,73,4.04,74,4.04]],["title/injectables/AuthMiddleware.html",[64,0.928,75,2.168]],["body/injectables/AuthMiddleware.html",[3,0.391,4,0.337,5,0.337,7,0.639,8,1.91,11,0.037,12,0.872,14,1.424,16,0.572,17,0.712,20,0.391,21,0.144,26,0.026,27,0.026,64,1.29,65,1.579,75,3.015,76,2.612,77,4.244,78,4.244,79,4.788,80,5.116,81,3.952,82,3.165,83,1.579,84,0.962,85,0.872,86,1.579,87,2.612,88,2.612,89,4.244,90,3.165]],["title/modules/AuthModule.html",[28,1.243,91,2.168]],["body/modules/AuthModule.html",[3,0.507,4,0.437,5,0.437,11,0.036,16,0.741,17,0.923,20,0.507,21,0.187,26,0.031,27,0.031,28,2.042,30,1.847,91,3.561,92,4.103]],["title/injectables/AuthService.html",[64,0.928,93,2.168]],["body/injectables/AuthService.html",[3,0.507,4,0.437,5,0.437,11,0.036,16,0.741,17,0.923,20,0.507,21,0.187,26,0.031,27,0.031,64,1.524,65,2.047,93,3.561,94,3.387]],["title/entities/Cat.html",[50,1.243,95,1.697]],["body/entities/Cat.html",[3,0.349,4,0.301,5,0.301,7,0.571,10,2.713,11,0.036,12,1.344,15,1.802,16,0.51,20,0.349,21,0.129,26,0.024,27,0.024,50,1.6,59,1.764,84,1.372,85,1.344,95,2.184,96,2.332,97,1.767,98,3.207,99,3.207,100,1.839,101,1.987,102,4.494,103,2.825,104,2.825,105,3.726,106,2.825,107,2.825,108,1.571]],["title/controllers/CatsController.html",[0,1.127,109,1.906]],["body/controllers/CatsController.html",[0,0.679,2,0.749,3,0.227,4,0.196,5,0.196,7,0.371,8,1.287,10,1.952,11,0.038,12,0.967,14,1.782,15,1.056,16,0.775,17,0.413,20,0.227,21,0.084,22,1.306,24,2.141,26,0.018,27,0.018,50,1.43,72,1.306,83,1.427,84,0.869,85,0.788,86,1.427,87,1.517,100,1.165,101,1.43,109,1.786,110,1.517,111,2.859,112,4.743,113,1.427,114,2.474,115,1.786,116,1.838,117,2.447,118,3.542,119,1.838,120,1.838,121,3.269,122,1.148,123,2.36,124,1.838,125,1.838,126,1.838,127,1.517,128,1.517,129,4.291,130,1.517,131,1.306,132,1.751,133,1.517,134,1.517,135,1.838,136,1.838,137,1.838,138,3.51,139,2.859,140,2.36,141,2.36,142,1.838,143,1.838,144,1.838,145,1.517,146,1.838]],["title/modules/CatsModule.html",[28,1.243,35,1.697]],["body/modules/CatsModule.html",[2,1.668,3,0.371,4,0.32,5,0.32,11,0.037,16,0.947,17,0.675,20,0.371,21,0.137,26,0.025,27,0.025,28,1.668,30,1.351,31,2.043,35,3.007,37,2.558,38,1.875,39,1.875,41,2.91,42,2.133,48,2.133,49,1.498,50,1.223,109,2.911,132,2.698,133,2.478,147,2.478,148,2.478,149,3.002,150,3.002,151,2.478,152,3.002]],["title/injectables/CatsService.html",[64,0.928,132,1.523]],["body/injectables/CatsService.html",[3,0.281,4,0.242,5,0.242,7,0.46,8,1.513,11,0.037,12,1.217,14,1.8,16,0.852,17,0.512,20,0.281,21,0.104,24,1.678,26,0.021,27,0.021,49,1.135,50,2.01,64,1.022,65,1.135,81,1.878,83,1.995,84,1.216,85,1.102,86,1.995,100,1.369,101,1.629,108,1.265,113,1.678,114,2.759,115,2.1,121,3.647,122,2.1,132,1.678,134,1.878,151,1.878,153,1.878,154,2.775,155,2.275,156,3.139,157,2.275,158,3.362,159,3.362,160,2.275,161,2.275,162,2.275,163,1.878,164,2.275,165,1.878,166,2.275,167,2.275,168,2.275]],["title/classes/CreateCatDto.html",[21,0.139,117,1.523]],["body/classes/CreateCatDto.html",[3,0.424,4,0.366,5,0.366,7,0.694,11,0.035,12,1.373,15,1.951,20,0.424,21,0.157,26,0.028,27,0.028,84,1.515,85,1.373,97,2.016,98,3.541,99,3.541,101,1.824,117,2.235,169,1.909,170,2.834,171,3.433,172,3.433,173,3.433]],["title/classes/CreateCatDto-1.html",[21,0.117,117,1.277,174,2.56]],["body/classes/CreateCatDto-1.html",[3,0.401,4,0.345,5,0.345,7,0.655,11,0.035,12,1.424,15,1.908,20,0.401,21,0.148,26,0.027,27,0.027,84,1.474,85,1.424,97,1.941,98,3.444,99,3.444,100,1.974,101,2.104,117,2.152,169,1.803,175,2.677,176,3.243,177,3.243,178,3.243,179,3.243]],["title/classes/CreateUserDto.html",[21,0.139,180,1.523]],["body/classes/CreateUserDto.html",[3,0.398,4,0.343,5,0.343,7,0.651,11,0.035,12,1.42,15,1.784,20,0.398,21,0.147,26,0.026,27,0.026,84,1.306,85,1.42,97,1.933,100,1.75,101,1.313,169,1.792,180,2.144,181,4.431,182,2.29,183,3.546,184,3.546,185,3.223,186,3.223,187,3.223,188,3.223,189,3.223,190,3.223,191,3.223,192,3.223]],["title/classes/UpdateUserDto.html",[21,0.139,193,1.697]],["body/classes/UpdateUserDto.html",[3,0.474,4,0.408,5,0.408,11,0.036,16,0.868,20,0.474,21,0.175,26,0.03,27,0.03,113,1.913,169,2.132,180,1.913,182,2.724,193,2.672,194,3.165,195,3.834,196,3.165,197,3.165,198,2.724,199,3.834,200,3.834]],["title/entities/User.html",[95,1.697,201,1.523]],["body/entities/User.html",[3,0.349,4,0.301,5,0.301,7,0.571,10,2.713,11,0.036,12,1.344,15,1.96,16,0.51,20,0.349,21,0.129,26,0.024,27,0.024,59,1.764,84,1.372,85,1.344,95,2.184,97,1.767,100,1.839,101,1.6,102,4.494,105,3.726,108,1.571,183,3.726,184,3.726,201,1.959,202,2.332,203,2.825,204,2.825,205,2.825,206,2.825]],["title/controllers/UsersController.html",[0,1.127,207,1.906]],["body/controllers/UsersController.html",[0,0.665,2,0.733,3,0.223,4,0.192,5,0.192,7,0.364,8,1.266,10,2.363,11,0.037,12,1.171,14,1.912,15,1.849,16,0.768,17,0.405,20,0.223,21,0.082,22,1.279,23,1.486,24,2.12,26,0.017,27,0.017,72,1.279,83,1.954,84,1.191,85,1.079,86,1.954,100,1.835,113,1.404,114,2.446,115,1.757,118,2.859,122,1.124,123,2.322,127,1.486,128,2.322,131,1.279,141,1.486,145,1.486,180,2.248,193,2.708,198,1.999,201,0.898,207,1.757,208,1.486,209,1.486,210,2.322,211,2.322,212,1.486,213,1.8,214,1.8,215,1.8,216,1.486,217,2.814,218,1.8,219,1.486,220,2.814,221,1.8,222,1.8,223,1.8,224,1.728,225,1.486,226,1.486,227,1.8,228,1.8,229,1.8,230,1.8,231,1.8,232,1.8,233,1.8,234,1.8,235,1.8]],["title/modules/UsersModule.html",[28,1.243,36,1.697]],["body/modules/UsersModule.html",[2,1.675,3,0.373,4,0.322,5,0.322,11,0.037,16,0.949,17,0.679,20,0.373,21,0.138,26,0.025,27,0.025,28,1.675,30,1.359,31,2.051,36,3.012,37,2.568,38,1.886,39,1.886,41,2.921,48,2.145,49,1.507,201,1.507,207,2.92,224,2.703,225,2.492,236,2.492,237,2.492,238,3.019,239,3.019,240,2.492,241,3.019]],["title/injectables/UsersService.html",[64,0.928,224,1.523]],["body/injectables/UsersService.html",[3,0.234,4,0.201,5,0.201,7,0.382,8,1.316,11,0.037,12,1.266,14,1.957,16,0.83,17,0.425,20,0.234,21,0.086,24,2.169,26,0.018,27,0.018,49,0.943,64,0.889,65,0.943,83,2.169,84,1.322,85,1.198,86,2.169,100,1.456,101,2.07,108,1.051,113,1.459,114,2.511,115,1.826,122,1.826,131,1.343,154,2.413,156,2.539,163,1.561,165,1.561,180,2.169,193,2.665,198,2.077,201,0.943,210,2.413,211,2.413,212,2.413,216,2.413,219,2.413,224,1.459,226,1.561,240,1.561,242,1.561,243,1.891,244,1.891,245,1.891,246,1.891,247,1.891,248,1.891,249,1.891,250,1.891,251,1.891,252,1.891,253,1.891,254,1.891,255,1.891,256,1.891,257,1.891]],["title/coverage.html",[258,2.942]],["body/coverage.html",[0,1.572,1,1.318,5,0.225,6,1.742,11,0.036,18,1.053,21,0.194,26,0.02,27,0.02,44,1.5,50,1.295,64,1.388,66,1.742,70,1.5,71,1.742,75,1.5,76,1.742,85,0.582,88,2.624,93,1.5,94,1.742,95,1.768,96,1.742,109,1.318,110,1.742,117,1.586,132,1.053,140,1.742,153,1.742,170,1.742,175,1.742,180,1.053,181,1.742,182,2.259,193,1.174,194,1.742,201,1.586,202,1.742,207,1.318,208,1.742,224,1.053,242,1.742,258,1.5,259,1.742,260,2.111,261,2.111,262,5.866,263,3.825,264,5.244,265,3.825,266,4.257,267,2.111,268,3.179,269,1.742,270,3.179,271,1.742,272,1.742,273,1.742,274,1.742,275,2.111,276,2.111,277,2.111,278,1.742,279,1.742,280,2.111,281,2.111]],["title/dependencies.html",[31,1.828,282,2.113]],["body/dependencies.html",[11,0.037,17,0.793,26,0.028,27,0.028,31,1.759,47,2.91,49,1.759,108,1.96,130,2.91,196,2.91,197,2.91,283,5.048,284,3.525,285,3.525,286,3.525,287,3.525,288,2.91,289,2.91,290,3.525,291,3.525,292,3.525,293,3.525,294,3.525,295,3.525,296,3.525,297,3.525]],["title/miscellaneous/functions.html",[298,1.599,299,3.024]],["body/miscellaneous/functions.html",[7,0.816,11,0.033,26,0.031,27,0.031,44,3.527,83,2.016,84,1.228,86,2.016,272,3.335,273,3.335,274,4.437,298,2.523,299,3.335,300,4.04,301,4.04,302,4.04,303,4.04]],["title/index.html",[7,0.517,304,2.56,305,2.56]],["body/index.html",[4,0.229,11,0.037,26,0.02,27,0.02,42,1.524,50,0.874,54,1.771,113,1.07,156,1.524,209,2.656,258,1.524,259,1.771,288,1.771,306,1.771,307,3.862,308,3.218,309,2.145,310,2.145,311,2.145,312,3.218,313,2.145,314,2.145,315,2.145,316,2.145,317,2.145,318,2.145,319,2.145,320,2.145,321,5.267,322,3.218,323,2.145,324,2.145,325,2.145,326,2.145,327,2.145,328,2.145,329,2.145,330,2.145,331,4.828,332,2.145,333,2.145,334,3.218,335,2.145,336,2.145,337,2.145,338,2.145,339,2.145,340,3.218,341,2.145,342,2.145,343,3.218,344,2.145,345,2.145,346,3.218,347,2.145,348,2.145,349,2.145,350,2.145,351,2.145,352,3.862,353,2.145,354,3.218,355,2.145,356,2.145,357,2.145,358,2.145,359,2.145,360,2.145,361,2.145,362,2.145,363,2.145,364,2.145,365,1.771,366,2.145,367,2.145,368,2.145,369,2.145,370,2.145,371,2.145,372,2.145,373,2.145,374,2.145,375,2.145,376,2.145,377,2.145,378,2.145,379,2.145,380,2.145]],["title/modules.html",[30,1.864]],["body/modules.html",[11,0.03,26,0.03,27,0.03,29,2.485,30,1.791,35,2.212,36,2.212,91,2.827,365,4.407,381,5.339,382,5.339,383,5.577,384,3.979,385,3.979]],["title/overview.html",[386,3.418]],["body/overview.html",[2,1.259,11,0.034,18,2.36,26,0.026,27,0.026,29,3.542,30,1.391,31,2.084,32,2.551,33,2.551,34,2.551,35,2.943,36,2.943,37,2.609,38,1.93,39,1.93,59,1.93,65,1.542,132,2.36,147,2.551,148,2.551,169,1.718,224,2.36,236,2.551,237,2.551,386,2.551,387,4.73,388,4.176,389,3.09,390,3.09]],["title/properties.html",[97,1.649,282,2.113]],["body/properties.html",[11,0.037,26,0.032,27,0.032,97,1.922,289,3.524,306,3.524,391,4.269,392,4.269,393,4.269,394,4.269]],["title/miscellaneous/variables.html",[298,1.599,395,3.024]],["body/miscellaneous/variables.html",[7,0.742,11,0.037,26,0.029,27,0.029,63,3.861,85,1.012,269,3.032,271,3.861,278,3.032,279,3.861,298,2.294,395,3.032,396,3.673,397,3.673,398,3.673,399,4.678,400,4.678,401,3.673,402,3.673,403,3.673,404,3.673]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":289,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.1.13",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":264,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":263,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":265,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":174,"title":{"classes/CreateCatDto-1.html":{}},"body":{}}],["2",{"_index":388,"title":{},"body":{"overview.html":{}}}],["2.3.1",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":387,"title":{},"body":{"overview.html":{}}}],["5",{"_index":389,"title":{},"body":{"overview.html":{}}}],["5.1.6",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":138,"title":{},"body":{"controllers/CatsController.html":{}}}],["adds",{"_index":139,"title":{},"body":{"controllers/CatsController.html":{}}}],["age",{"_index":98,"title":{},"body":{"entities/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{}}}],["amazing",{"_index":366,"title":{},"body":{"index.html":{}}}],["api",{"_index":311,"title":{},"body":{"index.html":{}}}],["api_collections",{"_index":316,"title":{},"body":{"index.html":{}}}],["api_collections/import_guide",{"_index":319,"title":{},"body":{"index.html":{}}}],["app",{"_index":329,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":380,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":112,"title":{},"body":{"controllers/CatsController.html":{}}}],["auth",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{}}}],["authcontroller",{"_index":70,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["authmiddleware",{"_index":75,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["authmodule",{"_index":91,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{}}}],["author",{"_index":394,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":93,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["autoloadentities",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":385,"title":{},"body":{"modules.html":{}}}],["backers",{"_index":367,"title":{},"body":{"index.html":{}}}],["body",{"_index":128,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":274,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["breed",{"_index":99,"title":{},"body":{"entities/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{}}}],["browse",{"_index":383,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":381,"title":{},"body":{"modules.html":{}}}],["building",{"_index":375,"title":{},"body":{"index.html":{}}}],["cat",{"_index":50,"title":{"entities/Cat.html":{}},"body":{"modules/AppModule.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"index.html":{}}}],["cat.entity",{"_index":151,"title":{},"body":{"modules/CatsModule.html":{},"injectables/CatsService.html":{}}}],["catrepository",{"_index":158,"title":{},"body":{"injectables/CatsService.html":{}}}],["cats",{"_index":111,"title":{},"body":{"controllers/CatsController.html":{}}}],["cats.controller",{"_index":150,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats.service",{"_index":133,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["cats/cat.entity",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["cats/cats.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["catscontroller",{"_index":109,"title":{"controllers/CatsController.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catsmodule",{"_index":35,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":132,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["class",{"_index":21,"title":{"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":169,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["cli",{"_index":339,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":147,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":148,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":236,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":237,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["collections",{"_index":312,"title":{},"body":{"index.html":{}}}],["column",{"_index":102,"title":{},"body":{"entities/Cat.html":{},"entities/User.html":{}}}],["compodoc",{"_index":344,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":346,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["constructor",{"_index":154,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["constructor(catrepository",{"_index":155,"title":{},"body":{"injectables/CatsService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["constructor(usersrepository",{"_index":243,"title":{},"body":{"injectables/UsersService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CatsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CatsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('cats",{"_index":135,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller('users",{"_index":228,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":258,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":113,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(@body",{"_index":141,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["create(@req",{"_index":137,"title":{},"body":{"controllers/CatsController.html":{}}}],["create(cat",{"_index":159,"title":{},"body":{"injectables/CatsService.html":{}}}],["create(createcatdto",{"_index":116,"title":{},"body":{"controllers/CatsController.html":{}}}],["create(createuserdto",{"_index":212,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createcatdto",{"_index":117,"title":{"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"coverage.html":{}}}],["createuserdto",{"_index":180,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["d",{"_index":345,"title":{},"body":{"index.html":{}}}],["database",{"_index":326,"title":{},"body":{"index.html":{}}}],["database:process.env.db_database",{"_index":402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datastr",{"_index":404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datastr)=>!!(datastr?.tolowercase",{"_index":403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db/getconfig",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":223,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":217,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":306,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dev.sqliterunning",{"_index":328,"title":{},"body":{"index.html":{}}}],["development",{"_index":330,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":259,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto/create",{"_index":131,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":226,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":355,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":376,"title":{},"body":{"index.html":{}}}],["email",{"_index":183,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["email:string",{"_index":191,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["entities",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"entities/Cat.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/user.entity",{"_index":240,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":95,"title":{"entities/Cat.html":{},"entities/User.html":{}},"body":{"entities/Cat.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity.{ts,js",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["env",{"_index":324,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":323,"title":{},"body":{"index.html":{}}}],["environment",{"_index":314,"title":{},"body":{"index.html":{}}}],["example",{"_index":342,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["express",{"_index":130,"title":{},"body":{"controllers/CatsController.html":{},"dependencies.html":{}}}],["extends",{"_index":199,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":114,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(@req",{"_index":142,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone",{"_index":115,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":145,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":122,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":308,"title":{},"body":{"index.html":{}}}],["function",{"_index":88,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":299,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":340,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":123,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["getconnectionconfig",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getconnectionconfig(\"sqlite",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["getconnectionconfig(settings",{"_index":302,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":304,"title":{"index.html":{}},"body":{}}],["graph",{"_index":384,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":362,"title":{},"body":{"index.html":{}}}],["hello",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":372,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":125,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpcode(204",{"_index":136,"title":{},"body":{"controllers/CatsController.html":{}}}],["id",{"_index":100,"title":{},"body":{"entities/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["id:number",{"_index":189,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["identifier",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":90,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"index.html":{}}}],["imports:[typeormmodule.forfeature([user",{"_index":241,"title":{},"body":{"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":64,"title":{"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":163,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(cat",{"_index":164,"title":{},"body":{"injectables/CatsService.html":{}}}],["injectrepository(user",{"_index":251,"title":{},"body":{"injectables/UsersService.html":{}}}],["install",{"_index":322,"title":{},"body":{"index.html":{}}}],["installation",{"_index":320,"title":{},"body":{"index.html":{}}}],["interface",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["interfaces",{"_index":390,"title":{},"body":{"overview.html":{}}}],["interfaces/cat.interface",{"_index":134,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["interfaces/user.interface",{"_index":227,"title":{},"body":{"controllers/UsersController.html":{}}}],["join",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["license",{"_index":392,"title":{},"body":{"properties.html":{}}}],["licensed",{"_index":359,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":313,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":298,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":358,"title":{},"body":{"index.html":{}}}],["mode",{"_index":334,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":371,"title":{},"body":{"index.html":{}}}],["name",{"_index":84,"title":{},"body":{"injectables/AuthMiddleware.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["name:string",{"_index":190,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["nest",{"_index":307,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":288,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/cli",{"_index":341,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":196,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":89,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["new",{"_index":140,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["next",{"_index":80,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["node.js",{"_index":374,"title":{},"body":{"index.html":{}}}],["npm",{"_index":321,"title":{},"body":{"index.html":{}}}],["npx",{"_index":348,"title":{},"body":{"index.html":{}}}],["number",{"_index":101,"title":{},"body":{"entities/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":360,"title":{},"body":{"index.html":{}}}],["optional",{"_index":86,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":386,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":349,"title":{},"body":{"index.html":{}}}],["package",{"_index":282,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":127,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":83,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["partialtype",{"_index":195,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":200,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["password",{"_index":184,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["password:string",{"_index":192,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["patch",{"_index":222,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":220,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":369,"title":{},"body":{"index.html":{}}}],["post",{"_index":118,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["postman",{"_index":315,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["primarygeneratedcolumn",{"_index":105,"title":{},"body":{"entities/Cat.html":{},"entities/User.html":{}}}],["private",{"_index":165,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":336,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":373,"title":{},"body":{"index.html":{}}}],["project",{"_index":361,"title":{},"body":{"index.html":{}}}],["promise",{"_index":121,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["properties",{"_index":97,"title":{"properties.html":{}},"body":{"entities/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"properties.html":{}}}],["providers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}}}],["read",{"_index":370,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["redirect",{"_index":126,"title":{},"body":{"controllers/CatsController.html":{}}}],["refer",{"_index":317,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":290,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":210,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":234,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":216,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["repository",{"_index":156,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":87,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/CatsController.html":{}}}],["request",{"_index":129,"title":{},"body":{"controllers/CatsController.html":{}}}],["res",{"_index":79,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["reset",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resource",{"_index":343,"title":{},"body":{"index.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["run",{"_index":331,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":351,"title":{},"body":{"index.html":{}}}],["scalable",{"_index":377,"title":{},"body":{"index.html":{}}}],["screenshots",{"_index":318,"title":{},"body":{"index.html":{}}}],["server",{"_index":378,"title":{},"body":{"index.html":{}}}],["settings",{"_index":303,"title":{},"body":{"miscellaneous/functions.html":{}}}],["side",{"_index":379,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":364,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":325,"title":{},"body":{"index.html":{}}}],["sqlite3",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["sqliteconfig",{"_index":271,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/.../dotenv.ts",{"_index":397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../getconfig.ts",{"_index":301,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":300,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sqlite.ts",{"_index":396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.middleware.ts",{"_index":76,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/auth/auth.middleware.ts:5",{"_index":82,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/auth/auth.module.ts",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/cats/cat.entity.ts",{"_index":96,"title":{},"body":{"entities/Cat.html":{},"coverage.html":{}}}],["src/cats/cat.entity.ts:12",{"_index":103,"title":{},"body":{"entities/Cat.html":{}}}],["src/cats/cat.entity.ts:15",{"_index":104,"title":{},"body":{"entities/Cat.html":{}}}],["src/cats/cat.entity.ts:6",{"_index":106,"title":{},"body":{"entities/Cat.html":{}}}],["src/cats/cat.entity.ts:9",{"_index":107,"title":{},"body":{"entities/Cat.html":{}}}],["src/cats/cats.controller.ts",{"_index":110,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:25",{"_index":119,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:30",{"_index":120,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:36",{"_index":124,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.module.ts",{"_index":149,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/cats.service.ts",{"_index":153,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cats/cats.service.ts:13",{"_index":160,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:17",{"_index":161,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:20",{"_index":162,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:8",{"_index":157,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/dto/create.ts",{"_index":175,"title":{},"body":{"classes/CreateCatDto-1.html":{},"coverage.html":{}}}],["src/cats/dto/create.ts:2",{"_index":178,"title":{},"body":{"classes/CreateCatDto-1.html":{}}}],["src/cats/dto/create.ts:3",{"_index":179,"title":{},"body":{"classes/CreateCatDto-1.html":{}}}],["src/cats/dto/create.ts:4",{"_index":176,"title":{},"body":{"classes/CreateCatDto-1.html":{}}}],["src/cats/dto/create.ts:5",{"_index":177,"title":{},"body":{"classes/CreateCatDto-1.html":{}}}],["src/cats/interfaces/cat.interface.ts",{"_index":267,"title":{},"body":{"coverage.html":{}}}],["src/db/config/sqlite.ts",{"_index":269,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/db/getconfig.ts",{"_index":272,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/dto.ts",{"_index":170,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["src/dto.ts:2",{"_index":173,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/dto.ts:3",{"_index":171,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/dto.ts:4",{"_index":172,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/main.ts",{"_index":273,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/dto/create",{"_index":181,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":194,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":202,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:12",{"_index":203,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:15",{"_index":206,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:6",{"_index":204,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:9",{"_index":205,"title":{},"body":{"entities/User.html":{}}}],["src/users/interfaces/user.interface.ts",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["src/users/users.controller.ts",{"_index":208,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:12",{"_index":213,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:17",{"_index":214,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:22",{"_index":215,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:27",{"_index":221,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:32",{"_index":218,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":238,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":242,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:15",{"_index":246,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":247,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:23",{"_index":248,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:27",{"_index":250,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:31",{"_index":249,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":244,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/dotenv.ts",{"_index":278,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":332,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":335,"title":{},"body":{"index.html":{}}}],["start:prodcli",{"_index":337,"title":{},"body":{"index.html":{}}}],["started",{"_index":305,"title":{"index.html":{}},"body":{}}],["starter",{"_index":310,"title":{},"body":{"index.html":{}}}],["statements",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":365,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":382,"title":{},"body":{"modules.html":{}}}],["table",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":352,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":357,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":356,"title":{},"body":{"index.html":{}}}],["tests",{"_index":354,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":363,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.catrepository.find",{"_index":167,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catrepository.findoneby",{"_index":168,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catrepository.save(cat",{"_index":166,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catsservice.create(createcatdto",{"_index":143,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findall",{"_index":144,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findone(id",{"_index":146,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.usersrepository.delete(id",{"_index":257,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":254,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findoneby({id",{"_index":255,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(createuserdto",{"_index":253,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.update(id,updateuserdto",{"_index":256,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":229,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":230,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(+id",{"_index":231,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":235,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(+id",{"_index":233,"title":{},"body":{"controllers/UsersController.html":{}}}],["toboolean",{"_index":279,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tools",{"_index":338,"title":{},"body":{"index.html":{}}}],["touch",{"_index":327,"title":{},"body":{"index.html":{}}}],["true",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["tsconfig.json",{"_index":350,"title":{},"body":{"index.html":{}}}],["type",{"_index":85,"title":{},"body":{"injectables/AuthMiddleware.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type:\"sqlite",{"_index":401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeorm",{"_index":108,"title":{},"body":{"entities/Cat.html":{},"injectables/CatsService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([cat",{"_index":152,"title":{},"body":{"modules/CatsModule.html":{}}}],["typeormmodule.forroot",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":197,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":309,"title":{},"body":{"index.html":{}}}],["unit",{"_index":353,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":393,"title":{},"body":{"properties.html":{}}}],["update",{"_index":211,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":232,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":219,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":193,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usage",{"_index":347,"title":{},"body":{"index.html":{}}}],["use",{"_index":77,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["use(req",{"_index":78,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["user",{"_index":201,"title":{"entities/User.html":{}},"body":{"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.dto",{"_index":198,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":182,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:2",{"_index":186,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:3",{"_index":187,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:4",{"_index":185,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":188,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users",{"_index":209,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["users.controller",{"_index":239,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":225,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":207,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":36,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":245,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersrepository:repository",{"_index":252,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":224,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["value",{"_index":400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":270,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":395,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":391,"title":{},"body":{"properties.html":{}}}],["void",{"_index":81,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CatsService.html":{}}}],["watch",{"_index":333,"title":{},"body":{"index.html":{}}}],["world",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":368,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CatsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport getConnectionConfig  from './db/getConfig';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport {Cat} from \"./cats/cat.entity\"\nimport { CatsModule } from './cats/cats.module';\nimport { UsersModule } from './users/users.module';\nimport { join } from 'path';\n\n@Module({\n  imports: [\n    CatsModule,\n    UsersModule,\n    ConfigModule.forRoot(),\n    TypeOrmModule.forRoot({\n      ...getConnectionConfig(\"sqlite\"),\n      entities: [join(__dirname, '**', '*.entity.{ts,js}')]\n      // autoLoadEntities: true\n    }),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('auth')\nexport class AuthController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: any, res: any, next: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.middleware.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  use(req: any, res: any, next: () => void) {\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Cat.html":{"url":"entities/Cat.html","title":"entity - Cat","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cat.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/cat.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/cat.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/cat.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/cat.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Cat {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  age: number;\n\n  @Column()\n  breed: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, Post, HttpCode, Redirect, Param, Body} from '@nestjs/common';\nimport { Request } from 'express';\nimport { CreateCatDto } from './dto/create';\nimport { CatsService } from './cats.service';\nimport { Cat } from './interfaces/cat.interface';\n\n@Controller('cats')\nexport class CatsController {\n  // @Post()\n  // @HttpCode(204)\n  // create(@Req() request: Request): string {\n  //   return 'This action adds a new cat';\n  // }\n  // @Post()\n  // async create(@Body() createCatDto: CreateCatDto) {\n  //   return 'This action adds a new cat';\n  // }\n  // @Get()\n  // findAll(@Req() request: Request): string {\n  //   return 'This action returns all cats';\n  // }\n  constructor(private catsService: CatsService) {}\n\n   @Post()\n   async create(@Body() createCatDto: CreateCatDto) {\n     this.catsService.create(createCatDto);\n   }\n\n   @Get()\n   async findAll(): Promise {\n     return this.catsService.findAll();\n   }\n\n\n  @Get(':id')\n  findOne(@Param('id') id: number):  Promise {\n    return this.catsService.findOne(id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService\n\nCatsService\n\n\n\nCatsModule\n\nCatsModule\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/cats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\nimport { Cat } from './cat.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Cat])],\n  controllers: [CatsController],\n  providers: [CatsService],\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(catRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/cats/cats.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        catRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(cat: Cat)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                Cat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n// import { Cat } from './interfaces/cat.interface';\nimport { Repository } from 'typeorm';\nimport { Cat } from './cat.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class CatsService {\n  constructor(\n    @InjectRepository(Cat)\n    private catRepository: Repository,\n  ){}\n  create(cat: Cat) {\n    this.catRepository.save(cat);\n  }\n\n  findAll(): Promise {\n     return this.catRepository.find();\n   }\n  findOne(id: number): Promise {\n   return this.catRepository.findOneBy({ id });\n }\n\n }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCatDto {\n  name: string;\n  age: number;\n  breed: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto-1.html":{"url":"classes/CreateCatDto-1.html","title":"class - CreateCatDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/dto/create.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/cats/dto/create.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/cats/dto/create.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/cats/dto/create.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/cats/dto/create.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCatDto {\n  id: number;\n  name: string;\n  age: number;\n  breed: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {\n    id:number\n    name:string\n    email:string\n    password:string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  email: string;\n\n  @Column()\n  password: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './interfaces/user.interface';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\n\n@Module({\n  imports:[TypeOrmModule.forFeature([User])],\n  controllers: [UsersController],\n  providers: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private usersRepository:Repository\n  ){}\n  \n  create(createUserDto: CreateUserDto) {\n    return this.usersRepository.save(createUserDto);\n  }\n\n  findAll() {\n    return this.usersRepository.find();\n  }\n\n  findOne(id: number) {\n    return this.usersRepository.findOneBy({id});\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return this.usersRepository.update(id,updateUserDto)\n  }\n\n  remove(id: number) {\n    return this.usersRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cats/cat.entity.ts\n            \n            entity\n            Cat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cats/dto/create.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cats/interfaces/cat.interface.ts\n            \n            interface\n            Cat\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/db/config/sqlite.ts\n            \n            variable\n            SqliteConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/db/getConfig.ts\n            \n            function\n            getConnectionConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/utils/dotenv.ts\n            \n            variable\n            toBoolean\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            nestjs : ^0.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            sqlite3 : ^5.1.6\n        \n            typeorm : ^0.3.12\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getConnectionConfig   (src/.../getConfig.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/db/getConfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getConnectionConfig\n                        \n                    \n                \n            \n            \n                \ngetConnectionConfig(settings)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDescription\nNest framework TypeScript starter repository.\nAPI Collections\nCollections and localhost environment for Postman is in api_collections/.\nRefer to screenshots in api_collections/import_guide for imports.\nInstallation\nnpm install\ncat .env.example > .env\n# for sqlite database\ntouch dev.sqliteRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodCLI tools\n# NestJS CLI\n$ npm install -g @nestjs/cli\n## example: create users resource\n$ nest g resource users\n\n# CompoDoc for documentation\n$ npm i -D @compodoc/compodoc\n\n## Usage:\n$ npx @compodoc/compodoc -p tsconfig.json -s\nTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SqliteConfig   (src/.../sqlite.ts)\n                        \n                        \n                            toBoolean   (src/.../dotenv.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/db/config/sqlite.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SqliteConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  type:\"sqlite\",\n  database:process.env.DB_DATABASE,\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/dotenv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toBoolean\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ((dataStr)=>!!(dataStr?.toLowerCase?.() === 'true' || dataStr === true))\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
