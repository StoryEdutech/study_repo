var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.26,1,2.035]],["body/controllers/AppController.html",[0,1.9,1,3.069,2,1.474,3,0.375,4,0.324,5,0.324,6,3.094,7,0.483,8,1.743,9,4.662,10,1.934,11,0.033,12,0.665,13,3.714,14,1.352,15,1.134,16,0.944,17,0.88,18,2.759,19,3.094,20,0.375,21,0.019,22,1.934,23,3.094,24,1.474,25,3.714,26,0.025,27,0.025]],["title/modules/AppModule.html",[28,1.375,29,2.035]],["body/modules/AppModule.html",[1,2.826,2,1.492,3,0.263,4,0.228,5,0.228,11,0.033,16,1.146,17,0.618,18,2.775,19,2.172,20,0.263,21,0.013,26,0.019,27,0.019,28,1.628,29,3.813,30,1.236,31,1.782,32,2.172,33,2.172,34,2.172,35,3.066,36,3.066,37,2.775,38,2.163,39,1.5,40,1.5,41,2.607,42,2.41,43,2.41,44,2.607,45,1.886,46,2.607,47,2.607,48,2.172,49,1.886,50,1.358,51,2.607,52,2.607,53,2.172,54,2.607,55,2.607,56,2.607,57,2.607,58,2.607,59,1.671,60,2.607,61,2.607,62,2.607,63,1.671]],["title/injectables/AppService.html",[18,1.654,64,0.975]],["body/injectables/AppService.html",[3,0.399,4,0.345,5,0.345,7,0.513,8,1.813,9,4.769,11,0.032,12,0.707,14,1.438,15,1.179,16,0.779,17,0.936,18,2.593,20,0.399,21,0.02,24,1.568,26,0.026,27,0.026,64,1.529,65,2.057,66,3.291,67,3.95,68,3.95,69,3.95]],["title/controllers/AuthController.html",[0,1.26,70,1.827]],["body/controllers/AuthController.html",[0,0.979,2,0.979,3,0.249,4,0.215,5,0.215,7,0.32,8,1.315,10,2.224,11,0.033,12,0.765,14,1.555,16,1.031,17,0.584,20,0.249,21,0.012,22,1.284,24,1.695,26,0.019,27,0.019,70,2.077,71,2.054,72,1.783,73,2.466,74,3.61,75,3.007,76,3.007,77,2.466,78,2.878,79,2.466,80,2.466,81,1.695,82,0.924,83,0.765,84,1.695,85,1.783,86,2.466,87,3.35,88,3.61,89,2.466,90,2.054,91,3.007,92,3.61,93,2.466,94,1.783,95,1.783,96,2.054,97,2.466,98,1.783,99,2.466,100,2.224,101,2.054,102,2.466,103,2.054,104,2.054,105,1.581,106,2.466,107,2.466,108,2.466,109,2.466,110,2.466,111,2.466,112,2.466,113,2.466,114,2.466,115,2.466,116,2.466,117,2.466,118,2.466,119,2.466]],["title/guards/AuthGuard.html",[105,2.035,120,2.296]],["body/guards/AuthGuard.html",[3,0.22,4,0.19,5,0.19,7,0.284,8,1.2,11,0.033,12,0.711,14,1.2,15,0.781,16,0.873,17,0.517,20,0.22,21,0.011,22,1.137,24,1.308,26,0.017,27,0.017,63,1.399,64,1.012,81,1.576,82,0.86,83,0.851,84,1.576,98,3.751,105,2.113,121,2.182,122,1.818,123,2.872,124,4.426,125,2.546,126,3.296,127,1.399,128,2.182,129,4.162,130,2.182,131,3.296,132,4.426,133,2.182,134,2.182,135,2.113,136,3.296,137,2.182,138,3.972,139,2.872,140,1.399,141,1.399,142,1.818,143,1.578,144,1.818,145,3.2,146,2.182,147,4.751,148,2.182,149,2.384,150,1.897,151,2.182,152,3.309,153,1.818,154,2.182,155,1.578,156,1.818,157,2.182,158,2.182,159,1.818,160,1.818,161,2.182,162,2.182,163,2.182,164,2.182,165,2.182,166,2.182,167,2.182]],["title/injectables/AuthMiddleware.html",[64,0.975,168,2.296]],["body/injectables/AuthMiddleware.html",[3,0.359,4,0.311,5,0.311,7,0.462,8,1.696,11,0.033,12,0.637,14,1.296,16,0.702,17,0.843,20,0.359,21,0.018,26,0.024,27,0.024,64,1.43,65,1.854,81,1.412,82,0.77,83,0.637,84,1.412,85,2.574,144,2.965,168,3.367,169,2.965,170,4.656,171,4.656,172,4.324,173,5.505,174,3.753,175,3.559,176,2.965,177,4.656]],["title/modules/AuthModule.html",[28,1.375,35,1.827]],["body/modules/AuthModule.html",[2,1.154,3,0.293,4,0.254,5,0.254,11,0.033,16,1.089,17,0.689,20,0.293,21,0.015,26,0.021,27,0.021,28,1.759,30,1.378,31,1.925,35,3.38,37,2.876,38,2.337,39,1.673,40,1.673,42,1.864,43,2.603,63,1.864,70,2.337,100,3.099,101,2.422,140,1.864,141,1.864,142,2.422,155,2.102,156,2.422,178,2.422,179,2.422,180,2.907,181,2.422,182,2.907,183,2.422,184,2.907,185,2.907,186,2.907,187,2.907,188,2.907,189,2.907,190,2.907,191,2.907,192,2.907,193,2.907,194,2.907]],["title/injectables/AuthService.html",[64,0.975,100,1.654]],["body/injectables/AuthService.html",[3,0.184,4,0.159,5,0.159,7,0.237,8,1.046,11,0.033,12,0.784,14,1.467,15,1.257,16,0.917,17,0.433,20,0.184,21,0.009,22,0.951,24,1.598,26,0.015,27,0.015,64,0.883,65,0.951,75,2.394,76,2.394,78,2.676,81,1.738,82,0.948,83,0.784,84,1.738,90,1.521,91,2.52,100,1.496,103,1.521,104,1.521,123,3.749,125,1.171,127,1.171,129,4.053,135,1.842,139,1.321,140,1.171,145,3.363,149,2.078,150,2.044,152,1.521,153,2.959,172,1.521,195,1.521,196,2.873,197,3.552,198,2.873,199,1.826,200,2.205,201,1.826,202,2.873,203,1.245,204,1.826,205,0.791,206,2.873,207,1.826,208,1.826,209,4.027,210,2.873,211,1.826,212,0.951,213,1.826,214,1.826,215,1.826,216,1.826,217,1.521,218,1.496,219,1.826,220,1.826,221,2.873,222,0.866,223,2.873,224,1.826,225,1.826,226,1.826,227,1.826,228,1.826,229,1.826,230,1.826,231,1.826,232,1.826,233,1.826,234,1.826,235,1.826,236,1.826,237,1.826,238,1.826,239,1.826,240,1.826,241,1.826,242,1.826,243,2.873,244,1.826,245,1.826]],["title/entities/Cat.html",[246,1.827,247,1.505]],["body/entities/Cat.html",[3,0.325,4,0.281,5,0.281,7,0.419,10,2.756,11,0.032,12,0.948,15,1.254,16,0.636,20,0.325,21,0.016,26,0.022,27,0.022,59,2.066,82,1.069,83,0.948,203,2.292,205,2.14,246,2.508,247,2.067,248,2.685,249,1.587,250,3.572,251,3.572,252,4.854,253,3.223,254,3.223,255,4.115,256,3.223,257,3.223,258,1.855]],["title/controllers/CatsController.html",[0,1.26,259,2.035]],["body/controllers/CatsController.html",[0,0.869,2,0.869,3,0.221,4,0.191,5,0.191,7,0.285,8,1.203,10,2.073,11,0.033,12,0.713,14,1.614,15,0.783,16,0.938,17,0.519,20,0.221,21,0.011,22,1.14,24,1.888,26,0.017,27,0.017,72,1.583,81,1.311,82,0.715,83,0.592,84,1.311,85,1.583,94,1.583,95,3.441,96,1.824,98,3.441,123,3.755,135,2.841,143,1.583,150,1.901,203,1.724,205,1.431,247,1.887,259,2.118,260,1.824,261,3.304,262,1.721,263,2.841,264,2.118,265,2.189,266,2.784,267,2.189,268,2.189,269,1.403,270,2.753,271,2.189,272,2.189,273,1.824,274,1.824,275,2.073,276,1.824,277,1.824,278,2.189,279,2.189,280,2.189,281,3.98,282,3.304,283,2.753,284,2.189,285,2.189,286,2.189,287,1.824,288,2.189]],["title/modules/CatsModule.html",[28,1.375,36,1.827]],["body/modules/CatsModule.html",[2,1.793,3,0.343,4,0.297,5,0.297,11,0.033,16,1.11,17,0.805,20,0.343,21,0.017,26,0.023,27,0.023,28,1.957,30,1.612,31,2.142,36,3.33,38,2.6,39,1.956,40,1.956,42,2.896,43,2.179,49,2.458,50,1.771,247,1.612,259,3.253,275,3.014,276,2.832,289,2.832,290,2.832,291,3.399,292,3.399,293,2.832,294,3.399]],["title/injectables/CatsService.html",[64,0.975,275,1.654]],["body/injectables/CatsService.html",[3,0.268,4,0.232,5,0.232,7,0.345,8,1.388,11,0.033,12,0.872,14,1.623,16,1.016,17,0.63,20,0.268,21,0.013,24,1.513,26,0.02,27,0.02,50,1.385,64,1.171,65,1.385,81,1.768,82,0.964,83,0.798,84,1.768,125,1.704,127,2.443,135,3.12,174,1.922,203,1.93,205,1.651,247,2.542,258,1.53,262,1.985,263,3.12,264,2.443,269,2.443,275,1.985,277,2.214,293,2.214,295,2.214,296,2.658,297,3.52,298,2.658,299,3.812,300,3.812,301,2.658,302,2.658,303,2.658,304,2.214,305,2.658,306,2.658,307,2.658,308,2.658]],["title/classes/ChangePwDto.html",[21,0.016,78,1.827]],["body/classes/ChangePwDto.html",[3,0.431,4,0.373,5,0.373,7,0.555,11,0.03,12,0.765,15,1.238,20,0.431,21,0.021,26,0.027,27,0.027,78,3.008,83,0.765,222,2.678,249,1.903,309,1.85,310,3.559,311,4.272]],["title/classes/CreateCatDto.html",[21,0.016,266,1.654]],["body/classes/CreateCatDto.html",[3,0.385,4,0.333,5,0.333,7,0.496,11,0.031,12,0.961,15,1.339,20,0.385,21,0.019,26,0.025,27,0.025,82,1.162,83,0.961,203,2.111,249,1.774,250,3.881,251,3.881,266,2.538,309,1.654,312,3.18,313,3.818,314,3.818,315,3.818]],["title/classes/CreateCatDto-1.html",[21,0.013,266,1.386,316,2.216]],["body/classes/CreateCatDto-1.html",[3,0.367,4,0.317,5,0.317,7,0.472,11,0.031,12,0.994,15,1.315,20,0.367,21,0.018,26,0.024,27,0.024,82,1.135,83,0.994,203,2.404,205,2.271,249,1.719,250,3.791,251,3.791,266,2.459,309,1.575,317,3.028,318,3.635,319,3.635,320,3.635,321,3.635]],["title/classes/CreateUserDto.html",[21,0.016,322,1.654]],["body/classes/CreateUserDto.html",[3,0.383,4,0.331,5,0.331,7,0.493,11,0.031,12,0.958,15,1.268,20,0.383,21,0.019,26,0.025,27,0.025,82,1.051,83,0.958,212,2.529,222,2.302,249,1.768,309,1.645,322,2.529,323,4.7,324,2.745,325,3.796,326,3.796,327,3.796,328,3.796,329,3.796,330,3.796]],["title/classes/SignInDto.html",[21,0.016,87,2.035]],["body/classes/SignInDto.html",[3,0.387,4,0.335,5,0.335,7,0.499,11,0.031,12,0.963,15,1.417,20,0.387,21,0.019,26,0.025,27,0.025,82,1.165,83,0.963,87,3.134,212,2.803,222,2.551,249,1.781,309,1.663,331,3.198,332,3.839,333,3.839,334,3.839]],["title/classes/SignUpDto.html",[21,0.016,91,1.827]],["body/classes/SignUpDto.html",[3,0.385,4,0.333,5,0.333,7,0.496,11,0.031,12,0.961,15,1.415,20,0.385,21,0.019,26,0.025,27,0.025,82,1.162,83,0.961,91,2.804,212,2.795,222,2.544,249,1.774,309,1.654,335,3.18,336,3.818,337,3.818,338,3.818]],["title/classes/UpdateUserDto.html",[21,0.016,339,1.827]],["body/classes/UpdateUserDto.html",[3,0.423,4,0.366,5,0.366,11,0.032,16,1.019,20,0.423,21,0.021,26,0.027,27,0.027,262,2.184,309,1.816,322,2.184,324,3.032,339,2.974,340,3.493,341,4.193,342,3.493,343,3.493,344,3.032,345,4.193,346,4.193]],["title/entities/User.html",[218,1.654,246,1.827]],["body/entities/User.html",[3,0.325,4,0.281,5,0.281,7,0.419,10,2.756,11,0.032,12,0.948,15,1.35,16,0.636,20,0.325,21,0.016,26,0.022,27,0.022,59,2.066,82,1.069,83,0.948,203,1.888,205,2.14,212,2.573,218,2.27,222,2.342,246,2.508,249,1.587,252,4.854,255,4.115,258,1.855,347,2.685,348,3.223,349,3.223,350,3.223,351,3.223]],["title/controllers/UsersController.html",[0,1.26,352,2.035]],["body/controllers/UsersController.html",[0,0.872,2,0.872,3,0.222,4,0.192,5,0.192,7,0.285,8,1.206,10,2.313,11,0.033,12,0.795,14,1.617,15,1.297,16,0.786,17,0.52,20,0.222,21,0.011,22,1.144,23,1.83,24,1.891,26,0.017,27,0.017,70,1.264,72,1.588,81,1.582,82,0.863,83,0.714,84,1.582,94,2.395,95,2.395,139,1.588,145,1.588,149,1.588,150,1.264,200,1.89,205,2.17,222,1.57,262,1.144,263,2.846,264,2.123,269,1.408,270,2.759,273,1.83,283,1.83,287,1.83,322,1.725,339,2.992,344,1.588,352,2.123,353,1.83,354,1.83,355,2.759,356,2.759,357,2.196,358,2.196,359,1.83,360,3.312,361,2.196,362,1.83,363,3.312,364,2.196,365,2.196,366,2.196,367,2.196,368,1.83,369,1.83,370,2.196,371,2.196,372,2.196,373,2.196,374,2.196,375,2.196,376,2.196,377,2.196,378,2.196,379,2.196,380,2.196,381,2.196,382,2.196,383,2.196]],["title/modules/UsersModule.html",[28,1.375,37,1.654]],["body/modules/UsersModule.html",[2,1.735,3,0.327,4,0.283,5,0.283,11,0.032,16,1.092,17,0.767,20,0.327,21,0.016,26,0.023,27,0.023,28,1.894,30,1.535,31,2.073,37,3.038,38,2.516,39,1.863,40,1.863,42,2.803,49,2.342,50,1.687,183,3.643,200,2.928,218,1.687,352,3.174,368,2.698,384,2.698,385,2.698,386,2.698,387,3.238,388,3.238,389,2.698,390,3.238]],["title/injectables/UsersService.html",[64,0.975,200,1.505]],["body/injectables/UsersService.html",[3,0.213,4,0.184,5,0.184,7,0.274,8,1.169,11,0.033,12,0.918,14,1.795,15,0.921,16,0.972,17,0.499,20,0.213,21,0.011,24,1.726,26,0.017,27,0.017,50,1.098,64,0.986,65,1.098,81,1.957,82,1.067,83,0.883,84,1.957,125,1.351,127,2.058,174,2.322,200,1.522,203,2.345,205,1.685,212,1.098,218,1.098,258,1.213,262,1.672,263,2.787,264,2.058,269,2.058,274,1.756,297,2.812,304,1.756,322,2.437,339,2.95,344,2.322,355,2.675,356,2.675,359,2.675,362,2.675,369,1.756,389,1.756,391,1.756,392,3.211,393,2.108,394,2.108,395,2.108,396,3.211,397,2.108,398,2.108,399,3.211,400,2.108,401,2.108,402,2.108,403,2.108,404,2.108,405,2.108,406,2.108,407,2.108,408,2.108,409,2.108,410,2.108,411,2.108]],["title/coverage.html",[412,3.12]],["body/coverage.html",[0,1.779,1,1.436,5,0.195,6,1.866,11,0.032,18,1.166,21,0.026,26,0.017,27,0.017,45,1.62,64,1.476,66,1.866,70,1.289,71,1.866,78,1.289,83,0.401,87,1.436,91,1.289,100,1.166,105,1.436,120,1.62,122,1.866,141,1.436,150,1.289,168,1.62,169,1.866,176,2.8,195,1.866,200,1.062,218,1.751,246,1.934,247,1.593,248,1.866,259,1.436,260,1.866,266,1.751,275,1.166,295,1.866,310,1.866,312,1.866,317,1.866,322,1.166,323,1.866,324,2.431,331,1.866,335,1.866,339,1.289,340,1.866,347,1.866,352,1.436,353,1.866,391,1.866,412,1.62,413,1.866,414,2.24,415,2.24,416,6.25,417,4.484,418,5.383,419,2.24,420,1.866,421,4.035,422,5.383,423,4.484,424,2.24,425,3.361,426,1.866,427,1.866,428,1.866,429,1.866,430,1.866,431,2.24,432,2.24,433,1.866,434,1.866,435,2.24,436,2.24]],["title/dependencies.html",[31,1.808,437,2.216]],["body/dependencies.html",[11,0.033,17,0.856,21,0.023,26,0.024,27,0.024,31,1.714,48,3.012,50,1.883,140,2.318,143,2.614,217,3.012,258,2.08,342,3.012,343,3.012,438,5.23,439,3.616,440,3.616,441,3.616,442,3.616,443,3.616,444,3.616,445,3.616,446,3.616,447,3.616,448,3.616,449,3.012,450,3.012,451,3.616,452,3.616,453,3.616,454,3.616,455,3.616,456,3.616,457,3.616,458,3.616]],["title/miscellaneous/functions.html",[459,1.705,460,3.177]],["body/miscellaneous/functions.html",[7,0.569,11,0.029,26,0.027,27,0.027,45,3.838,81,1.739,82,0.948,84,1.739,428,3.65,429,3.65,430,4.758,459,2.808,460,3.65,461,4.381,462,4.381,463,4.381,464,4.381]],["title/index.html",[7,0.346,465,2.66,466,2.66]],["body/index.html",[4,0.219,11,0.032,26,0.019,27,0.019,43,1.61,53,2.092,160,2.092,247,1.191,262,1.308,297,1.816,354,3.048,412,1.816,413,2.092,449,2.092,467,2.092,468,4.315,469,3.658,470,2.512,471,2.512,472,2.512,473,3.658,474,2.512,475,2.512,476,2.512,477,2.512,478,2.512,479,2.512,480,2.512,481,2.512,482,5.673,483,3.658,484,2.512,485,2.512,486,2.512,487,2.512,488,2.512,489,2.512,490,2.512,491,2.512,492,5.259,493,2.512,494,2.512,495,3.658,496,2.512,497,2.512,498,2.512,499,2.512,500,2.512,501,3.658,502,2.512,503,2.512,504,3.658,505,2.512,506,2.512,507,3.658,508,2.512,509,2.512,510,2.512,511,2.512,512,2.512,513,2.512,514,2.512,515,2.512,516,3.658,517,3.658,518,2.512,519,2.512,520,2.512,521,2.512,522,2.512,523,2.512,524,2.512,525,2.512,526,2.512,527,2.512,528,2.092,529,2.512,530,2.512,531,2.512,532,2.512,533,2.512,534,2.512,535,2.512,536,2.512,537,2.512,538,2.512,539,2.512,540,2.512,541,2.512,542,2.512]],["title/modules.html",[30,2.046]],["body/modules.html",[11,0.027,26,0.027,27,0.027,29,2.755,30,2.038,35,2.473,36,2.473,37,2.239,528,4.913,543,5.898,544,5.898,545,5.898]],["title/overview.html",[546,3.595]],["body/overview.html",[2,1.179,11,0.031,18,2.466,26,0.021,27,0.021,29,3.831,30,1.408,31,1.954,32,2.475,33,2.475,34,2.475,35,3.345,36,3.091,37,2.969,38,2.372,39,1.709,40,1.709,59,1.904,65,1.547,100,2.969,120,2.148,178,2.475,179,2.475,181,2.475,200,2.703,275,2.466,289,2.475,290,2.475,309,1.287,316,2.475,384,2.475,385,2.475,386,2.475,546,2.475,547,4.122,548,4.122,549,2.97,550,2.97,551,2.97]],["title/properties.html",[249,1.389,437,2.216]],["body/properties.html",[11,0.032,26,0.028,27,0.028,249,1.67,450,3.822,467,3.822,552,4.587,553,4.587,554,4.587,555,4.587]],["title/miscellaneous/variables.html",[459,1.705,556,3.177]],["body/miscellaneous/variables.html",[7,0.483,11,0.033,26,0.025,27,0.025,63,3.069,83,0.857,141,3.069,155,2.686,159,3.988,420,3.094,426,3.094,427,3.988,433,3.094,434,3.988,459,2.381,556,3.094,557,3.714,558,3.714,559,3.714,560,5.297,561,5.297,562,3.714,563,3.714,564,3.714,565,3.714,566,3.714,567,3.714]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/ChangePwDto.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":450,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.1.13",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["0h8kpn7hogxtktxs",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":316,"title":{"classes/CreateCatDto-1.html":{}},"body":{"overview.html":{}}}],["10",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["10.0.3",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":548,"title":{},"body":{"overview.html":{}}}],["2.3.1",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":547,"title":{},"body":{"overview.html":{}}}],["5",{"_index":549,"title":{},"body":{"overview.html":{}}}],["5.1.0",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["5.1.6",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["60s",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["7",{"_index":550,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["access",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{}}}],["access_token",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["action",{"_index":281,"title":{},"body":{"controllers/CatsController.html":{}}}],["adds",{"_index":282,"title":{},"body":{"controllers/CatsController.html":{}}}],["age",{"_index":250,"title":{},"body":{"entities/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{}}}],["amazing",{"_index":529,"title":{},"body":{"index.html":{}}}],["api",{"_index":472,"title":{},"body":{"index.html":{}}}],["api_collections",{"_index":477,"title":{},"body":{"index.html":{}}}],["api_collections/import_guide",{"_index":480,"title":{},"body":{"index.html":{}}}],["app",{"_index":490,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":542,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assigning",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{}}}],["async",{"_index":123,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{}}}],["auth",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/change_pw",{"_index":377,"title":{},"body":{"controllers/UsersController.html":{}}}],["authcontroller",{"_index":70,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["authguard",{"_index":105,"title":{"guards/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authmiddleware",{"_index":168,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["authmodule",{"_index":35,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":555,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":100,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authservice.crypt(changepwdto.password",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["autoloadentities",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["backers",{"_index":530,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":367,"title":{},"body":{"controllers/UsersController.html":{}}}],["badrequestexception(\"password_change_on_/auth/change_pw",{"_index":380,"title":{},"body":{"controllers/UsersController.html":{}}}],["bcrypt",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["bearer",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{}}}],["body",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":430,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["breed",{"_index":251,"title":{},"body":{"entities/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{}}}],["browse",{"_index":545,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":543,"title":{},"body":{"modules.html":{}}}],["building",{"_index":537,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":124,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cat",{"_index":247,"title":{"entities/Cat.html":{}},"body":{"entities/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"index.html":{}}}],["cat.entity",{"_index":293,"title":{},"body":{"modules/CatsModule.html":{},"injectables/CatsService.html":{}}}],["catch",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catrepository",{"_index":299,"title":{},"body":{"injectables/CatsService.html":{}}}],["cats",{"_index":261,"title":{},"body":{"controllers/CatsController.html":{}}}],["cats.controller",{"_index":292,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats.service",{"_index":276,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["cats/cats.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["catscontroller",{"_index":259,"title":{"controllers/CatsController.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catsmodule",{"_index":36,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":275,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["change_pw",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["change_pw(id",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["changed",{"_index":376,"title":{},"body":{"controllers/UsersController.html":{}}}],["changepw",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepw(@request",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepw(req",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepwdto",{"_index":78,"title":{"classes/ChangePwDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePwDto.html":{},"coverage.html":{}}}],["changepwdto:changepwdto",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["class",{"_index":21,"title":{"classes/ChangePwDto.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/ChangePwDto.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":309,"title":{},"body":{"classes/ChangePwDto.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["cli",{"_index":500,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":289,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":290,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":384,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":385,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":386,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["collections",{"_index":473,"title":{},"body":{"index.html":{}}}],["column",{"_index":252,"title":{},"body":{"entities/Cat.html":{},"entities/User.html":{}}}],["compare",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(plain_password,password",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["compodoc",{"_index":505,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":507,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(changepwdto.password",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(result",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["constants",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["constructor",{"_index":127,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["constructor(catrepository",{"_index":296,"title":{},"body":{"injectables/CatsService.html":{}}}],["constructor(jwtservice",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["constructor(usersrepository",{"_index":393,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CatsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CatsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('cats",{"_index":278,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller('users",{"_index":370,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["controllers:[authcontroller",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{}}}],["coverage",{"_index":412,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":262,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(@body",{"_index":283,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["create(@req",{"_index":280,"title":{},"body":{"controllers/CatsController.html":{}}}],["create(cat",{"_index":300,"title":{},"body":{"injectables/CatsService.html":{}}}],["create(createcatdto",{"_index":265,"title":{},"body":{"controllers/CatsController.html":{}}}],["create(createuserdto",{"_index":396,"title":{},"body":{"injectables/UsersService.html":{}}}],["createcatdto",{"_index":266,"title":{"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"coverage.html":{}}}],["createuserdto",{"_index":322,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["crypt",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["crypt(plain_password",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["crypt(plain_password:string",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["d",{"_index":506,"title":{},"body":{"index.html":{}}}],["database",{"_index":487,"title":{},"body":{"index.html":{}}}],["database:process.env.db_database",{"_index":565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datastr",{"_index":567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datastr)=>!!(datastr?.tolowercase",{"_index":566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db/getconfig",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/ChangePwDto.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":366,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":360,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":467,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dev.sqliterunning",{"_index":489,"title":{},"body":{"index.html":{}}}],["development",{"_index":491,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":413,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto/change_pw",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/create",{"_index":274,"title":{},"body":{"controllers/CatsController.html":{},"injectables/UsersService.html":{}}}],["dto/signin",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/signup",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":369,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":518,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":538,"title":{},"body":{"index.html":{}}}],["email",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["email:string",{"_index":329,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["entities",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"entities/Cat.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/user.entity",{"_index":389,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":246,"title":{"entities/Cat.html":{},"entities/User.html":{}},"body":{"entities/Cat.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity.{ts,js",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["env",{"_index":485,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":484,"title":{},"body":{"index.html":{}}}],["environment",{"_index":475,"title":{},"body":{"index.html":{}}}],["example",{"_index":503,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{}}}],["expiresin",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/ChangePwDto.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["exports:[authservice",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["express",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"dependencies.html":{}}}],["extends",{"_index":345,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["extracttokenfromheader",{"_index":126,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/ChangePwDto.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":263,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(@req",{"_index":284,"title":{},"body":{"controllers/CatsController.html":{}}}],["findbyemail",{"_index":392,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyemail(email",{"_index":399,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":264,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":287,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":269,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":469,"title":{},"body":{"index.html":{}}}],["function",{"_index":176,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":460,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":501,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":270,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["getconnectionconfig",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getconnectionconfig(\"sqlite",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["getconnectionconfig(settings",{"_index":463,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":465,"title":{"index.html":{}},"body":{}}],["global",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{}}}],["grow",{"_index":525,"title":{},"body":{"index.html":{}}}],["guard",{"_index":120,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":121,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handled",{"_index":371,"title":{},"body":{"controllers/UsersController.html":{}}}],["handlers",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hash",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash(plain_password",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["http://127.0.0.1:8080",{"_index":510,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CatsController.html":{}}}],["httpcode(204",{"_index":279,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpcode(httpstatus.ok",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpstatus",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto-1.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["if(!res",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(!user",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(await",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(object.keys(other).length==0",{"_index":379,"title":{},"body":{"controllers/UsersController.html":{}}}],["implements",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"index.html":{}}}],["imports:[typeormmodule.forfeature([user",{"_index":390,"title":{},"body":{"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/ChangePwDto.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/ChangePwDto.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":64,"title":{"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":304,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(cat",{"_index":305,"title":{},"body":{"injectables/CatsService.html":{}}}],["injectrepository(user",{"_index":404,"title":{},"body":{"injectables/UsersService.html":{}}}],["install",{"_index":483,"title":{},"body":{"index.html":{}}}],["installation",{"_index":481,"title":{},"body":{"index.html":{}}}],["interface",{"_index":425,"title":{},"body":{"coverage.html":{}}}],["interfaces",{"_index":551,"title":{},"body":{"overview.html":{}}}],["interfaces/cat.interface",{"_index":277,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["join",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtconstants",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["jwtmodule",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["license",{"_index":553,"title":{},"body":{"properties.html":{}}}],["licensed",{"_index":522,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":474,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/ChangePwDto.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":459,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":521,"title":{},"body":{"index.html":{}}}],["mode",{"_index":495,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":534,"title":{},"body":{"index.html":{}}}],["name",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["name:string",{"_index":328,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["nest",{"_index":468,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":449,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/cli",{"_index":502,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":342,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":177,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["new",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["next",{"_index":173,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["node.js",{"_index":536,"title":{},"body":{"index.html":{}}}],["npm",{"_index":482,"title":{},"body":{"index.html":{}}}],["npx",{"_index":511,"title":{},"body":{"index.html":{}}}],["number",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["number,changepwdto",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["object",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":523,"title":{},"body":{"index.html":{}}}],["optional",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["others",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["out",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":546,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":512,"title":{},"body":{"index.html":{}}}],["package",{"_index":437,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":273,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["partialtype",{"_index":341,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":346,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["password",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangePwDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["password,...others",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["password,...other}=updateuserdto",{"_index":378,"title":{},"body":{"controllers/UsersController.html":{}}}],["password:authservice.crypt(password",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["password:await",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["password:string",{"_index":330,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["patch",{"_index":365,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":363,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["plain_password",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["please",{"_index":532,"title":{},"body":{"index.html":{}}}],["post",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["post('change_pw",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('change_pw')@useguards(authguard",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["postman",{"_index":476,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["primarygeneratedcolumn",{"_index":255,"title":{},"body":{"entities/Cat.html":{},"entities/User.html":{}}}],["private",{"_index":125,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":497,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":535,"title":{},"body":{"index.html":{}}}],["project",{"_index":524,"title":{},"body":{"index.html":{}}}],["promise",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["properties",{"_index":249,"title":{"properties.html":{}},"body":{"entities/Cat.html":{},"classes/ChangePwDto.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/User.html":{},"properties.html":{}}}],["providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}}}],["providers:[authservice",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{}}}],["read",{"_index":533,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["redirect",{"_index":272,"title":{},"body":{"controllers/CatsController.html":{}}}],["refer",{"_index":478,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":355,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":382,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":359,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["repository",{"_index":297,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/CatsController.html":{}}}],["req,@body",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{}}}],["request.headers.authorization?.split",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request['user",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{}}}],["res",{"_index":172,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["reset",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resource",{"_index":504,"title":{},"body":{"index.html":{}}}],["result",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/ChangePwDto.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["route",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{}}}],["run",{"_index":492,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["saltrounds",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["scalable",{"_index":539,"title":{},"body":{"index.html":{}}}],["screenshots",{"_index":479,"title":{},"body":{"index.html":{}}}],["secret",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["served",{"_index":509,"title":{},"body":{"index.html":{}}}],["server",{"_index":540,"title":{},"body":{"index.html":{}}}],["settings",{"_index":464,"title":{},"body":{"miscellaneous/functions.html":{}}}],["side",{"_index":541,"title":{},"body":{"index.html":{}}}],["signin",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(@body",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(email",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin(signindto",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto",{"_index":87,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["signindto.password",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["signoptions",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(signupdto",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(signupdto:signupdto",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdto",{"_index":91,"title":{"classes/SignUpDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/ChangePwDto.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":527,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":486,"title":{},"body":{"index.html":{}}}],["sqlite3",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["sqliteconfig",{"_index":427,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../dotenv.ts",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../getconfig.ts",{"_index":462,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":461,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sqlite.ts",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:14",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:19",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:24",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard.ts",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:12",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:15",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:38",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.middleware.ts",{"_index":169,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/auth/auth.middleware.ts:5",{"_index":175,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/auth/auth.module.ts",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:11",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:23",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:29",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:41",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":420,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/change_pw.ts",{"_index":310,"title":{},"body":{"classes/ChangePwDto.html":{},"coverage.html":{}}}],["src/auth/dto/change_pw.ts:2",{"_index":311,"title":{},"body":{"classes/ChangePwDto.html":{}}}],["src/auth/dto/signin.ts",{"_index":331,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["src/auth/dto/signin.ts:2",{"_index":333,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dto/signin.ts:3",{"_index":332,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dto/signin.ts:4",{"_index":334,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dto/signup.ts",{"_index":335,"title":{},"body":{"classes/SignUpDto.html":{},"coverage.html":{}}}],["src/auth/dto/signup.ts:2",{"_index":337,"title":{},"body":{"classes/SignUpDto.html":{}}}],["src/auth/dto/signup.ts:3",{"_index":336,"title":{},"body":{"classes/SignUpDto.html":{}}}],["src/auth/dto/signup.ts:4",{"_index":338,"title":{},"body":{"classes/SignUpDto.html":{}}}],["src/cats/cat.entity.ts",{"_index":248,"title":{},"body":{"entities/Cat.html":{},"coverage.html":{}}}],["src/cats/cat.entity.ts:12",{"_index":253,"title":{},"body":{"entities/Cat.html":{}}}],["src/cats/cat.entity.ts:15",{"_index":254,"title":{},"body":{"entities/Cat.html":{}}}],["src/cats/cat.entity.ts:6",{"_index":256,"title":{},"body":{"entities/Cat.html":{}}}],["src/cats/cat.entity.ts:9",{"_index":257,"title":{},"body":{"entities/Cat.html":{}}}],["src/cats/cats.controller.ts",{"_index":260,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:25",{"_index":267,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:30",{"_index":268,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:36",{"_index":271,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.module.ts",{"_index":291,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/cats.service.ts",{"_index":295,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cats/cats.service.ts:13",{"_index":301,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:17",{"_index":302,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:20",{"_index":303,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:8",{"_index":298,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/dto/create.ts",{"_index":317,"title":{},"body":{"classes/CreateCatDto-1.html":{},"coverage.html":{}}}],["src/cats/dto/create.ts:2",{"_index":320,"title":{},"body":{"classes/CreateCatDto-1.html":{}}}],["src/cats/dto/create.ts:3",{"_index":321,"title":{},"body":{"classes/CreateCatDto-1.html":{}}}],["src/cats/dto/create.ts:4",{"_index":318,"title":{},"body":{"classes/CreateCatDto-1.html":{}}}],["src/cats/dto/create.ts:5",{"_index":319,"title":{},"body":{"classes/CreateCatDto-1.html":{}}}],["src/cats/interfaces/cat.interface.ts",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["src/db/config/sqlite.ts",{"_index":426,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/db/getconfig.ts",{"_index":428,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/dto.ts",{"_index":312,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["src/dto.ts:2",{"_index":315,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/dto.ts:3",{"_index":313,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/dto.ts:4",{"_index":314,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/main.ts",{"_index":429,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/dto/create",{"_index":323,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":340,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":347,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:12",{"_index":348,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:15",{"_index":351,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:6",{"_index":349,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:9",{"_index":350,"title":{},"body":{"entities/User.html":{}}}],["src/users/interfaces/user.interface.ts",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["src/users/users.controller.ts",{"_index":353,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:16",{"_index":357,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:21",{"_index":358,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:26",{"_index":364,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:36",{"_index":361,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":387,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/users.service.ts",{"_index":391,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:15",{"_index":397,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":398,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:23",{"_index":401,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:27",{"_index":400,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:31",{"_index":403,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:35",{"_index":402,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":394,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/dotenv.ts",{"_index":433,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":493,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":496,"title":{},"body":{"index.html":{}}}],["start:prodcli",{"_index":498,"title":{},"body":{"index.html":{}}}],["started",{"_index":466,"title":{"index.html":{}},"body":{}}],["starter",{"_index":471,"title":{},"body":{"index.html":{}}}],["statements",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["stest",{"_index":514,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"classes/ChangePwDto.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["support",{"_index":528,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":544,"title":{},"body":{"modules.html":{}}}],["table",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":517,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":520,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":519,"title":{},"body":{"index.html":{}}}],["tests",{"_index":516,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":526,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.change_pw(req.user.id,changepwdto",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signin(signindto.email",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(signupdto",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.catrepository.find",{"_index":307,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catrepository.findoneby",{"_index":308,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catrepository.save(cat",{"_index":306,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catsservice.create(createcatdto",{"_index":285,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findall",{"_index":286,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findone(id",{"_index":288,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.extracttokenfromheader(request",{"_index":148,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.jwtservice.signasync(payload",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.usersrepository.delete(id",{"_index":411,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":407,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findoneby({email",{"_index":409,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findoneby({id",{"_index":408,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(createuserdto",{"_index":406,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.update(id,updateuserdto",{"_index":410,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":372,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":373,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyemail(email",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbyemail(others.email)){throw",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone(+id",{"_index":374,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":383,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(+id",{"_index":381,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":149,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["toboolean",{"_index":434,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tools",{"_index":499,"title":{},"body":{"index.html":{}}}],["touch",{"_index":488,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tsconfig.json",{"_index":513,"title":{},"body":{"index.html":{}}}],["type",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"entities/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/ChangePwDto.html":{},"classes/CreateCatDto.html":{},"classes/CreateCatDto-1.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type:\"sqlite",{"_index":564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeorm",{"_index":258,"title":{},"body":{"entities/Cat.html":{},"injectables/CatsService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([cat",{"_index":294,"title":{},"body":{"modules/CatsModule.html":{}}}],["typeormmodule.forroot",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":343,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":470,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["unauthorizedexception('email_taken",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('not_match",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unit",{"_index":515,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["unlicensed",{"_index":554,"title":{},"body":{"properties.html":{}}}],["update",{"_index":356,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":375,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":362,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":339,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usage",{"_index":508,"title":{},"body":{"index.html":{}}}],["use",{"_index":170,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["use(req",{"_index":171,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["useguards",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":218,"title":{"entities/User.html":{}},"body":{"injectables/AuthService.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.dto",{"_index":344,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":324,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:2",{"_index":326,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:3",{"_index":325,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:4",{"_index":327,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users",{"_index":354,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["users.controller",{"_index":388,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":368,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":352,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":37,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":395,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersrepository:repository",{"_index":405,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":200,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validator",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":556,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":552,"title":{},"body":{"properties.html":{}}}],["void",{"_index":174,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["vombw",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":494,"title":{},"body":{"index.html":{}}}],["we're",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{}}}],["world",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":531,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCatsModule\n\nCatsModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CatsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport getConnectionConfig  from './db/getConfig';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CatsModule } from './cats/cats.module';\nimport { UsersModule } from './users/users.module';\nimport { join } from 'path';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [\n    CatsModule,\n    UsersModule,\n    AuthModule,\n    ConfigModule.forRoot(),\n    TypeOrmModule.forRoot({\n      ...getConnectionConfig(\"sqlite\"),\n      entities: [join(__dirname, '**', '*.entity.{ts,js}')]\n      // autoLoadEntities: true\n    }),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePw\n                            \n                            \n                                signIn\n                            \n                            \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePw\n                        \n                    \n                \n            \n            \n                \nchangePw(req, changePwDto: ChangePwDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change_pw')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    changePwDto\n                                    \n                                                ChangePwDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(signInDto: SignInDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signInDto\n                                    \n                                                SignInDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(signUpDto: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, HttpCode, HttpStatus, Request, UseGuards } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { SignInDto } from './dto/signin';\nimport { SignUpDto } from './dto/signup';\nimport { ChangePwDto } from './dto/change_pw';\nimport { AuthGuard } from './auth.guard';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  // @HttpCode(HttpStatus.OK)\n  @Post('login')\n  signIn(@Body() signInDto: SignInDto) {\n    return this.authService.signIn(signInDto.email, signInDto.password);\n  }\n\n  @Post('signup')\n  signUp(@Body() signUpDto: SignUpDto){\n    return this.authService.signUp(signUpDto);\n  }\n  @Post('change_pw')\n  @UseGuards(AuthGuard)\n  changePw(@Request() req,@Body() changePwDto:ChangePwDto){\n    return this.authService.change_pw(req.user.id,changePwDto)\n  }\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.guard.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n    CanActivate,\n    ExecutionContext,\n    Injectable,\n    UnauthorizedException,\n  } from '@nestjs/common';\n  import { JwtService } from '@nestjs/jwt';\n  import { jwtConstants } from './constants';\n  import { Request } from 'express';\n  \n  @Injectable()\n  export class AuthGuard implements CanActivate {\n    constructor(private jwtService: JwtService) {}\n  \n    async canActivate(context: ExecutionContext): Promise {\n      const request = context.switchToHttp().getRequest();\n      const token = this.extractTokenFromHeader(request);\n\n      if (!token) {\n        throw new UnauthorizedException();\n      }\n      try {\n        const payload = await this.jwtService.verifyAsync(\n          token,\n          {\n            secret: jwtConstants.secret\n          }\n        );\n        // 💡 We're assigning the payload to the request object here\n        // so that we can access it in our route handlers\n        request['user'] = payload;\n      } catch {\n        throw new UnauthorizedException();\n      }\n      return true;\n    }\n  \n    private extractTokenFromHeader(request: Request): string | undefined {\n      const [type, token] = request.headers.authorization?.split(' ') ?? [];\n      return type === 'Bearer' ? token : undefined;\n    }\n  }\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: any, res: any, next: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.middleware.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  use(req: any, res: any, next: () => void) {\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\n\n@Module({\n    imports:[\n        UsersModule, \n        JwtModule.register({\n            global: true,\n            secret: jwtConstants.secret,\n            signOptions: { expiresIn: '60s' },\n          }),\n      ],\n    controllers:[AuthController],\n    providers:[AuthService],\n    exports:[AuthService]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                change_pw\n                            \n                            \n                                    Static\n                                crypt\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        change_pw\n                        \n                    \n                \n            \n            \n                \n                    \n                    change_pw(id: number, changePwDto: ChangePwDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    changePwDto\n                                    \n                                                ChangePwDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        crypt\n                        \n                    \n                \n            \n            \n                \n                    \n                    crypt(plain_password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plain_password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(email: string, plain_password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plain_password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(signUpDto: SignUpDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport { hash, compare } from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\nimport { SignUpDto } from './dto/signup';\nimport { ChangePwDto } from './dto/change_pw';\n\n@Injectable()\nexport class AuthService{\n    constructor(private usersService: UsersService, private jwtService: JwtService) {}\n    async signIn(email: string, plain_password: string): Promise {\n        const user = await this.usersService.findByEmail(email);\n        if(!user) {throw new UnauthorizedException('not_match')};\n        const { password, ...result } = user;\n        const res = await compare(plain_password,password);\n        if(!res) { throw new UnauthorizedException('not_match'); }        \n        console.log(result);\n        const payload = result;\n        return {\n            access_token: await this.jwtService.signAsync(payload),\n        };\n    }\n    async change_pw(id: number,changePwDto: ChangePwDto){\n        console.log(changePwDto.password);\n        return this.usersService.update(id,{\n            password:await AuthService.crypt(changePwDto.password)\n        })\n    }\n    async signUp(signUpDto:SignUpDto){\n\n        const {password,...others} =signUpDto;\n        if(await this.usersService.findByEmail(others.email)){throw new UnauthorizedException('email_taken') }\n        return this.usersService.create(\n            {\n                ...others,\n                password:AuthService.crypt(password)\n            }                \n        );\n    }\n\n    static crypt(plain_password:string) : string{\n        const saltRounds = 10;\n        return hash(plain_password, saltRounds);\n    } \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Cat.html":{"url":"entities/Cat.html","title":"entity - Cat","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cat.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/cat.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/cat.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/cat.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/cat.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Cat {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  age: number;\n\n  @Column()\n  breed: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, Post, HttpCode, Redirect, Param, Body} from '@nestjs/common';\nimport { Request } from 'express';\nimport { CreateCatDto } from './dto/create';\nimport { CatsService } from './cats.service';\nimport { Cat } from './interfaces/cat.interface';\n\n@Controller('cats')\nexport class CatsController {\n  // @Post()\n  // @HttpCode(204)\n  // create(@Req() request: Request): string {\n  //   return 'This action adds a new cat';\n  // }\n  // @Post()\n  // async create(@Body() createCatDto: CreateCatDto) {\n  //   return 'This action adds a new cat';\n  // }\n  // @Get()\n  // findAll(@Req() request: Request): string {\n  //   return 'This action returns all cats';\n  // }\n  constructor(private catsService: CatsService) {}\n\n   @Post()\n   async create(@Body() createCatDto: CreateCatDto) {\n     this.catsService.create(createCatDto);\n   }\n\n   @Get()\n   async findAll(): Promise {\n     return this.catsService.findAll();\n   }\n\n\n  @Get(':id')\n  findOne(@Param('id') id: number):  Promise {\n    return this.catsService.findOne(id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService\n\nCatsService\n\n\n\nCatsModule\n\nCatsModule\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/cats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\nimport { Cat } from './cat.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Cat])],\n  controllers: [CatsController],\n  providers: [CatsService],\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(catRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/cats/cats.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        catRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(cat: Cat)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                Cat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n// import { Cat } from './interfaces/cat.interface';\nimport { Repository } from 'typeorm';\nimport { Cat } from './cat.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class CatsService {\n  constructor(\n    @InjectRepository(Cat)\n    private catRepository: Repository,\n  ){}\n  create(cat: Cat) {\n    this.catRepository.save(cat);\n  }\n\n  findAll(): Promise {\n     return this.catRepository.find();\n   }\n  findOne(id: number): Promise {\n   return this.catRepository.findOneBy({ id });\n }\n\n }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePwDto.html":{"url":"classes/ChangePwDto.html","title":"class - ChangePwDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePwDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/change_pw.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change_pw.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ChangePwDto{\n    password: string;\n}\n  \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCatDto {\n  name: string;\n  age: number;\n  breed: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto-1.html":{"url":"classes/CreateCatDto-1.html","title":"class - CreateCatDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/dto/create.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/cats/dto/create.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/cats/dto/create.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/cats/dto/create.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/cats/dto/create.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCatDto {\n  id: number;\n  name: string;\n  age: number;\n  breed: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {\n    name:string\n    email:string\n    password:string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/signin.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signin.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signin.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signin.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SignInDto{\n  name: string;\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpDto.html":{"url":"classes/SignUpDto.html","title":"class - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/signup.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SignUpDto {\n  name: string;\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  email: string;\n\n  @Column()\n  password: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UnauthorizedException, BadRequestException } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  // create should be handled in AuthController\n  // @Post()\n  // create(@Body() createUserDto: CreateUserDto) {\n  //   return this.usersService.create(createUserDto);\n  // }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    // password should only be changed in /auth/change_pw\n    const {password,...other}=updateUserDto;\n    if(Object.keys(other).length==0 && password){\n      throw new BadRequestException(\"password_change_on_/auth/change_pw\")\n    }\n    return this.usersService.update(+id, other);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\n\n@Module({\n  imports:[TypeOrmModule.forFeature([User])],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findByEmail\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \nfindByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private usersRepository:Repository\n  ){}\n  \n  create(createUserDto: CreateUserDto) {\n     this.usersRepository.save(createUserDto);\n  }\n\n  findAll() {\n    return this.usersRepository.find();\n  }\n\n  findOne(id: number) {\n    return this.usersRepository.findOneBy({id});\n  }\n\n  findByEmail(email: string){\n    return this.usersRepository.findOneBy({email})\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n     this.usersRepository.update(id,updateUserDto)\n  }\n\n  remove(id: number) {\n    return this.usersRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/change_pw.ts\n            \n            class\n            ChangePwDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/signin.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dto/signup.ts\n            \n            class\n            SignUpDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/cat.entity.ts\n            \n            entity\n            Cat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cats/dto/create.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cats/interfaces/cat.interface.ts\n            \n            interface\n            Cat\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/db/config/sqlite.ts\n            \n            variable\n            SqliteConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/db/getConfig.ts\n            \n            function\n            getConnectionConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/dotenv.ts\n            \n            variable\n            toBoolean\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.3\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            nestjs : ^0.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            sqlite3 : ^5.1.6\n        \n            typeorm : ^0.3.12\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getConnectionConfig   (src/.../getConfig.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/db/getConfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getConnectionConfig\n                        \n                    \n                \n            \n            \n                \ngetConnectionConfig(settings)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDescription\nNest framework TypeScript starter repository.\nAPI Collections\nCollections and localhost environment for Postman is in api_collections/.\nRefer to screenshots in api_collections/import_guide for imports.\nInstallation\nnpm install\ncat .env.example > .env\n# for sqlite database\ntouch dev.sqliteRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodCLI tools\n# NestJS CLI\n$ npm install -g @nestjs/cli\n## example: create users resource\n$ nest g resource users\n\n# CompoDoc for documentation\n$ npm i -D @compodoc/compodoc\n\n## Usage: (served on http://127.0.0.1:8080/)\n$ npx @compodoc/compodoc -p tsconfig.json -sTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCatsModule\n\nCatsModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            SqliteConfig   (src/.../sqlite.ts)\n                        \n                        \n                            toBoolean   (src/.../dotenv.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    secret: '0h8kpN7hoGXTktxS-VoMbw',\n  }\n                    \n                \n\n\n        \n    \n\n    src/db/config/sqlite.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SqliteConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  type:\"sqlite\",\n  database:process.env.DB_DATABASE,\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/dotenv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toBoolean\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ((dataStr)=>!!(dataStr?.toLowerCase?.() === 'true' || dataStr === true))\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
